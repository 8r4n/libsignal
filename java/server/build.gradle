plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'

    id "de.undercouch.download" version "4.1.1"
}

sourceCompatibility = 1.8
archivesBaseName = "libsignal-server"
version          = version_number
group            = group_info

repositories {
    mavenCentral()
    mavenLocal()
}

sourceSets {
    main {
        java {
            // Include libsignal sources shared between the client and server
            srcDir '../shared/java'
        }
        resources {
            srcDir '../shared/resources'
        }
    }
    otherPlatformLibraries {}
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

test {
    testLogging {
        events 'passed'
        showStandardStreams = true
        showExceptions true
        exceptionFormat 'full'
        showCauses true
        showStackTraces true
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.register('testableJar', Jar) {
    from sourceSets.main.output
    from sourceSets.otherPlatformLibraries.resources
    classifier = 'testable'

    onlyIf { gradle.taskGraph.hasTask(":server:publish") }

    def extraResources = ['signal_jni.dll', 'libsignal_jni.dylib']
    def extraResourcesDir = 'src/otherPlatformLibraries/resources'

    doFirst {
        mkdir extraResourcesDir
        extraResources.each { name ->
            download {
                src 'https://github.com/signalapp/libsignal-client/releases/download/v' + project.version + '/' + name
                dest extraResourcesDir + '/' + name
            }
        }
    }
}

tasks.withType(JavaCompile) {
    // TODO: Build a different variant of the JNI library for server.
    compileTask -> compileTask.dependsOn ':makeJniLibrariesDesktop'
}

// MARK: Publishing

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java

            if (gradle.taskGraph.hasTask(":server:testableJar")) {
                artifact testableJar
            }

            pom {
                description = 'Signal Protocol cryptography library for Java (server-side)'
                url = 'https://github.com/signalapp/libsignal-client'

                scm {
                    url = 'scm:git@github.com:signalapp/libsignal-client.git'
                    connection = 'scm:git@github.com:signalapp/libsignal-client.git'
                    developerConnection = 'scm:git@github.com:signalapp/libsignal-client.git'
                }

                licenses {
                    license {
                        name = 'AGPLv3'
                        url = 'https://www.gnu.org/licenses/agpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        name = 'Signal Messenger LLC'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = getReleaseRepositoryUrl()
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }
        }
    }
}

signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask(":server:publish") }
    sign publishing.publications.mavenJava
}
